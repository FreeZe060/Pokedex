{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Pokedex\\\\front-end\\\\src\\\\contexts\\\\PokemonContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { useFetch } from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonContext = /*#__PURE__*/createContext();\nexport function PokemonProvider({\n  children\n}) {\n  _s();\n  const pokemonsUrl = \"https://pokedex-jgabriele.vercel.app/pokemons.json\";\n  const typesUrl = \"https://pokedex-jgabriele.vercel.app/types.json\";\n  const {\n    data: pokemonData,\n    isPending: isPendingPokemon,\n    error: errorPokemon\n  } = useFetch(pokemonsUrl);\n  const {\n    data: typesData,\n    isPending: isPendingTypes,\n    error: errorTypes\n  } = useFetch(typesUrl);\n  const datas = {\n    pokemonData,\n    typesData,\n    isPendingPokemon,\n    isPendingTypes,\n    errorPokemon,\n    errorTypes\n  };\n  return /*#__PURE__*/_jsxDEV(PokemonContext.Provider, {\n    value: datas,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(PokemonProvider, \"ubiEBUtY6xJZ+jaUvAjkFdVDK14=\", false, function () {\n  return [useFetch, useFetch];\n});\n_c = PokemonProvider;\nexport function usePokemonContext() {\n  _s2();\n  return useContext(PokemonContext);\n}\n_s2(usePokemonContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"PokemonProvider\");","map":{"version":3,"names":["React","createContext","useContext","useFetch","jsxDEV","_jsxDEV","PokemonContext","PokemonProvider","children","_s","pokemonsUrl","typesUrl","data","pokemonData","isPending","isPendingPokemon","error","errorPokemon","typesData","isPendingTypes","errorTypes","datas","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePokemonContext","_s2","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Pokedex/front-end/src/contexts/PokemonContext.jsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\r\nimport { useFetch } from \"../hooks/useFetch\";\r\n\r\nconst PokemonContext = createContext();\r\n\r\nexport function PokemonProvider({ children }) {\r\n    const pokemonsUrl = \"https://pokedex-jgabriele.vercel.app/pokemons.json\";\r\n    const typesUrl = \"https://pokedex-jgabriele.vercel.app/types.json\";\r\n\r\n    const { data: pokemonData, isPending: isPendingPokemon, error: errorPokemon } = useFetch(pokemonsUrl);\r\n    const { data: typesData, isPending: isPendingTypes, error: errorTypes } = useFetch(typesUrl);\r\n\r\n    const datas = {\r\n        pokemonData,\r\n        typesData,\r\n        isPendingPokemon,\r\n        isPendingTypes,\r\n        errorPokemon,\r\n        errorTypes,\r\n    };\r\n\r\n    return (\r\n        <PokemonContext.Provider value={datas}>\r\n            {children}\r\n        </PokemonContext.Provider>\r\n    );\r\n}\r\n\r\nexport function usePokemonContext() {\r\n    return useContext(PokemonContext);\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;AAEtC,OAAO,SAASM,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAMC,WAAW,GAAG,oDAAoD;EACxE,MAAMC,QAAQ,GAAG,iDAAiD;EAElE,MAAM;IAAEC,IAAI,EAAEC,WAAW;IAAEC,SAAS,EAAEC,gBAAgB;IAAEC,KAAK,EAAEC;EAAa,CAAC,GAAGd,QAAQ,CAACO,WAAW,CAAC;EACrG,MAAM;IAAEE,IAAI,EAAEM,SAAS;IAAEJ,SAAS,EAAEK,cAAc;IAAEH,KAAK,EAAEI;EAAW,CAAC,GAAGjB,QAAQ,CAACQ,QAAQ,CAAC;EAE5F,MAAMU,KAAK,GAAG;IACVR,WAAW;IACXK,SAAS;IACTH,gBAAgB;IAChBI,cAAc;IACdF,YAAY;IACZG;EACJ,CAAC;EAED,oBACIf,OAAA,CAACC,cAAc,CAACgB,QAAQ;IAACC,KAAK,EAAEF,KAAM;IAAAb,QAAA,EACjCA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC;AAAClB,EAAA,CArBeF,eAAe;EAAA,QAIqDJ,QAAQ,EACdA,QAAQ;AAAA;AAAAyB,EAAA,GALtErB,eAAe;AAuB/B,OAAO,SAASsB,iBAAiBA,CAAA,EAAG;EAAAC,GAAA;EAChC,OAAO5B,UAAU,CAACI,cAAc,CAAC;AACrC;AAACwB,GAAA,CAFeD,iBAAiB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}