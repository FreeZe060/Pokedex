{"ast":null,"code":"var _jsxFileName = \"/Users/tim/Documents/GitHub/Pokedex/ReactAPP/src/components/PokemonSlider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Slider from \"react-slick\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonSlider({\n  pokemonData,\n  pokemonID,\n  language\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [currentSlide, setCurrentSlide] = useState(pokemonID - 1);\n  const initialIndex = pokemonData.findIndex(poke => poke.id === pokemonID);\n  const settings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 1,\n    swipe: true,\n    swipeToSlide: true,\n    touchThreshold: 10,\n    initialSlide: initialIndex,\n    beforeChange: (current, next) => {\n      setCurrentSlide(next);\n    }\n  };\n  React.useEffect(() => {\n    if (currentSlide >= 0 && currentSlide < pokemonData.length) {\n      const newPokemonID = pokemonData[currentSlide].id;\n      navigate(`/pokemon/${newPokemonID}`);\n    }\n  }, [currentSlide, pokemonData, navigate]);\n  return /*#__PURE__*/_jsxDEV(Slider, {\n    ...settings,\n    children: pokemonData.map(poke => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: poke.image,\n        alt: poke.names[language],\n        className: \"h-26 w-26 object-cover rounded-full mx-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, poke.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(PokemonSlider, \"CNQHxveeH1EV0pTmNlzqgD2Sg5g=\", false, function () {\n  return [useNavigate];\n});\n_c = PokemonSlider;\nexport default PokemonSlider;\nvar _c;\n$RefreshReg$(_c, \"PokemonSlider\");","map":{"version":3,"names":["React","useState","Slider","useNavigate","jsxDEV","_jsxDEV","PokemonSlider","pokemonData","pokemonID","language","_s","navigate","currentSlide","setCurrentSlide","initialIndex","findIndex","poke","id","settings","infinite","speed","slidesToShow","slidesToScroll","swipe","swipeToSlide","touchThreshold","initialSlide","beforeChange","current","next","useEffect","length","newPokemonID","children","map","className","src","image","alt","names","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tim/Documents/GitHub/Pokedex/ReactAPP/src/components/PokemonSlider.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Slider from \"react-slick\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction PokemonSlider({ pokemonData, pokemonID, language }) {\n\n    const navigate = useNavigate();\n    const [currentSlide, setCurrentSlide] = useState(pokemonID-1);\n    const initialIndex = pokemonData.findIndex(poke => poke.id === pokemonID);\n\n    const settings = {\n        infinite: true,\n        speed: 500,\n        slidesToShow: 5,\n        slidesToScroll: 1,\n        swipe: true,\n        swipeToSlide: true,\n        touchThreshold: 10, \n        initialSlide: initialIndex,\n        beforeChange: (current, next) => {\n            setCurrentSlide(next);\n        },\n    };\n\n    React.useEffect(() => {\n        if (currentSlide >= 0 && currentSlide < pokemonData.length) {\n            const newPokemonID = pokemonData[currentSlide].id;\n            navigate(`/pokemon/${newPokemonID}`);\n        }\n    }, [currentSlide, pokemonData, navigate]);\n\n    return (\n        <Slider {...settings}>\n            {pokemonData.map((poke) => (\n                <div key={poke.id} className=\"p-2\">\n                    <img\n                        src={poke.image}\n                        alt={poke.names[language]}\n                        className=\"h-26 w-26 object-cover rounded-full mx-auto\"\n                    />\n                </div>\n            ))}\n        </Slider>\n    );\n}\n\nexport default PokemonSlider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,aAAa;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,SAASC,aAAaA,CAAC;EAAEC,WAAW;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAEzD,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACO,SAAS,GAAC,CAAC,CAAC;EAC7D,MAAMM,YAAY,GAAGP,WAAW,CAACQ,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKT,SAAS,CAAC;EAEzE,MAAMU,QAAQ,GAAG;IACbC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,GAAG;IACVC,YAAY,EAAE,CAAC;IACfC,cAAc,EAAE,CAAC;IACjBC,KAAK,EAAE,IAAI;IACXC,YAAY,EAAE,IAAI;IAClBC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAEZ,YAAY;IAC1Ba,YAAY,EAAEA,CAACC,OAAO,EAAEC,IAAI,KAAK;MAC7BhB,eAAe,CAACgB,IAAI,CAAC;IACzB;EACJ,CAAC;EAED7B,KAAK,CAAC8B,SAAS,CAAC,MAAM;IAClB,IAAIlB,YAAY,IAAI,CAAC,IAAIA,YAAY,GAAGL,WAAW,CAACwB,MAAM,EAAE;MACxD,MAAMC,YAAY,GAAGzB,WAAW,CAACK,YAAY,CAAC,CAACK,EAAE;MACjDN,QAAQ,CAAC,YAAYqB,YAAY,EAAE,CAAC;IACxC;EACJ,CAAC,EAAE,CAACpB,YAAY,EAAEL,WAAW,EAAEI,QAAQ,CAAC,CAAC;EAEzC,oBACIN,OAAA,CAACH,MAAM;IAAA,GAAKgB,QAAQ;IAAAe,QAAA,EACf1B,WAAW,CAAC2B,GAAG,CAAElB,IAAI,iBAClBX,OAAA;MAAmB8B,SAAS,EAAC,KAAK;MAAAF,QAAA,eAC9B5B,OAAA;QACI+B,GAAG,EAAEpB,IAAI,CAACqB,KAAM;QAChBC,GAAG,EAAEtB,IAAI,CAACuB,KAAK,CAAC9B,QAAQ,CAAE;QAC1B0B,SAAS,EAAC;MAA6C;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D;IAAC,GALI3B,IAAI,CAACC,EAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMZ,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEjB;AAACjC,EAAA,CAxCQJ,aAAa;EAAA,QAEDH,WAAW;AAAA;AAAAyC,EAAA,GAFvBtC,aAAa;AA0CtB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}